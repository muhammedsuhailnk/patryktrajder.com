export interface ISliderOptions {
    isCyclic: boolean;
    showNavDots: boolean;
    slideDuration: number;
    snapItems: boolean;
}
export default class Slider {
    private readonly slider;
    private readonly firstItem;
    private readonly items;
    private readonly leftArrow?;
    private readonly rightArrow?;
    private readonly navDots?;
    private readonly nItems;
    private readonly options;
    private readonly secondItem;
    private readonly wrapper;
    private abortClick;
    private contentWidth;
    private contentWidthMod;
    private currentIndex;
    private isGrabbing;
    private isTimerSet;
    private isTimerStopped;
    private itemWidthWithGap;
    private lastIndex;
    private lastItemOverflow;
    private minMarginLeft;
    private nAddedCopiesLeft;
    private nAddedCopiesRight;
    private previousItemWidthWithGap;
    private previousOffset;
    private realCurrentIndex;
    private sliding;
    private startMarginLeft;
    private startX;
    private timer?;
    constructor(slider: HTMLElement, options?: Partial<ISliderOptions>);
    update(): void;
    private autoSlide;
    private beforeSlide;
    private calculateContentWidth;
    private calculateItemWidthWithGap;
    private calculateLastIndex;
    private calculateLastItemOverflow;
    private calculateMinMarginLeft;
    private calculateIndex;
    private calculateRealIndex;
    private changeMarginLeftWithoutTransition;
    private drag;
    private dragEnd;
    private dragStart;
    private handleClick;
    private handleDragEnd;
    private handleNavDotClick;
    private handlePointerDown;
    private handlePointerEnter;
    private handlePointerMove;
    private handlePointerLeave;
    private handleFirstPictureTransitionEnd;
    private handleTransitionEnd;
    private handleWindowResize;
    private overflowLeft;
    private overflowRight;
    private setUpArrows;
    private setUpNavDots;
    private removeCopies;
    private slide;
    private slideLeft;
    private slideRight;
    private updateArrows;
    private updateNavDots;
}
